{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\instaclone\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listners: function listners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(null, mapDispatchProps)(Main);","map":{"version":3,"sources":["E:/instaclone/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","FeedScreen","ProfileScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {createMaterialBottomTabNavigator} from '@react-navigation/material-bottom-tabs'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {fetchUser} from '../redux/actions/index'\r\n\r\nimport FeedScreen from './main/Feed'\r\n//import AddScreen from \"./main/Add\";\r\nimport ProfileScreen from \"./main/Profile\";\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst EmptyScreen = () => {\r\n  return (null)\r\n}\r\nexport class Main extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchUser();\r\n    }\r\n    render() {\r\n        return (\r\n          <Tab.Navigator initialRouteName= \"Feed\" labeled={false}>\r\n            <Tab.Screen\r\n              name=\"Feed\"\r\n              component={FeedScreen}\r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <MaterialCommunityIcons name=\"home\" color={color} size={26} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"AddContainer\"\r\n              component={EmptyScreen}\r\n              listners={({ navigation }) => ({\r\n                tabPress: event => {\r\n                  event.preventDefault();\r\n                  navigation.navigate(\"Add\")\r\n                }\r\n              })}\r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Profile\"\r\n              component={ProfileScreen}\r\n              options={{\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\r\n                ),\r\n              }}\r\n            />\r\n          </Tab.Navigator>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch)\r\n\r\nexport default connect (null, mapDispatchProps)(Main)"]},"metadata":{},"sourceType":"module"}